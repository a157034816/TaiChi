<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TaiChi.Wpf.NodeEditor.Controls"
                    xmlns:core="clr-namespace:TaiChi.Wpf.NodeEditor.Core.Interfaces;assembly=TaiChi.Wpf.NodeEditor.Core"
                    xmlns:dragDrop="clr-namespace:TaiChi.Wpf.NodeEditor.Controls.AttachedProperties">

    <!-- 引入模板资源 -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/Converter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- TreeView模板选择器使用的DataTemplate -->

    <!-- CategoryTemplate - 统一的分类节点模板，支持多种视觉效果 -->
    <HierarchicalDataTemplate x:Key="ToolBoxCategoryTemplate"
                              DataType="{x:Type core:ICategoryTreeItemViewModel}"
                              ItemsSource="{Binding Children}">
        <Expander IsExpanded="{Binding IsExpanded}"
                  Margin="2,1">
            <Expander.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <!-- 特殊节点图标 -->
                        <TextBlock Text="★"
                                   FontSize="12"
                                   FontWeight="Bold"
                                   Foreground="Gold"
                                   VerticalAlignment="Center"
                                   Margin="2,0">
                            <TextBlock.Visibility>
                                <Binding Path="IsSpecial" Converter="{StaticResource BooleanToVisibilityConverter}" />
                            </TextBlock.Visibility>
                        </TextBlock>

                        <!-- 分组节点图标 -->
                        <TextBlock Text="📁"
                                   FontSize="12"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"
                                   Margin="2,0">
                            <TextBlock.Visibility>
                                <Binding Path="IsGroup" Converter="{StaticResource BooleanToVisibilityConverter}" />
                            </TextBlock.Visibility>
                        </TextBlock>

                        <!-- 容器节点图标 -->
                        <TextBlock Text="📦"
                                   FontSize="12"
                                   FontWeight="Bold"
                                   Foreground="SlateBlue"
                                   VerticalAlignment="Center"
                                   Margin="2,0">
                            <TextBlock.Visibility>
                                <Binding Path="IsContainer" Converter="{StaticResource BooleanToVisibilityConverter}" />
                            </TextBlock.Visibility>
                        </TextBlock>

                        <!-- 节点名称 -->
                        <TextBlock Text="{Binding Name}"
                                   FontWeight="Bold"
                                   FontSize="12"
                                   Margin="2,0" />

                        <!-- 节点数量 -->
                        <TextBlock Text="{Binding NodeCount, StringFormat=' ({0})'}"
                                   Foreground="Gray"
                                   FontSize="10"
                                   VerticalAlignment="Center"
                                   Margin="5,0,0,0" />
                    </StackPanel>
                </DataTemplate>
            </Expander.HeaderTemplate>

            <!-- 动态样式 -->
            <Expander.Style>
                <Style TargetType="Expander">
                    <!-- 默认样式 -->
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="1" />

                    <Style.Triggers>
                        <!-- 特殊节点样式 -->
                        <DataTrigger Binding="{Binding IsSpecial}" Value="True">
                            <Setter Property="Background" Value="LightYellow" />
                            <Setter Property="BorderBrush" Value="Goldenrod" />
                            <Setter Property="BorderThickness" Value="2" />
                        </DataTrigger>

                        <!-- 分组节点样式 -->
                        <DataTrigger Binding="{Binding IsGroup}" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="BorderThickness" Value="1" />
                        </DataTrigger>

                        <!-- 容器节点样式 -->
                        <DataTrigger Binding="{Binding IsContainer}" Value="True">
                            <Setter Property="Background" Value="LightSteelBlue" />
                            <Setter Property="BorderBrush" Value="SteelBlue" />
                            <Setter Property="BorderThickness" Value="2" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
        </Expander>
    </HierarchicalDataTemplate>

    <!-- NodeTemplate - 节点项的默认模板 -->
    <DataTemplate x:Key="ToolBoxNodeTemplate"
                  DataType="{x:Type core:INodeTreeItemViewModel}">
        <controls:ToolboxItem NodeMetadata="{Binding NodeMetadata}"
                              AllowDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                              AllowDoubleClickCreate="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDoubleClickCreate}"
                              IsSelected="{Binding IsSelected}"
                              Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ToolTip="{Binding ToolTipText}"
                              dragDrop:DragDropExtensions.EnableDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                              dragDrop:DragDropExtensions.DragData="{Binding NodeMetadata}">
            <controls:ToolboxItem.Style>
                <Style TargetType="controls:ToolboxItem">
                    <Style.Triggers>
                        <!-- 高亮状态 -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="ItemBackground" Value="LightBlue" />
                            <Setter Property="ItemBorderBrush" Value="Blue" />
                        </Trigger>

                        <!-- 选中状态 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="ItemBackground" Value="LightSkyBlue" />
                            <Setter Property="ItemBorderBrush" Value="DodgerBlue" />
                            <Setter Property="ItemBorderThickness" Value="2" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </controls:ToolboxItem.Style>
        </controls:ToolboxItem>
    </DataTemplate>

    <!-- SpecialNodeTemplate - 特殊节点模板（如收藏节点、系统节点等） -->
    <DataTemplate x:Key="ToolBoxSpecialNodeTemplate"
                  DataType="{x:Type core:INodeTreeItemViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- 特殊标记 -->
            <TextBlock Grid.Column="0"
                       Text="★"
                       FontSize="12"
                       FontWeight="Bold"
                       Foreground="Gold"
                       VerticalAlignment="Center"
                       Margin="2,0" />

            <!-- 节点内容 -->
            <controls:ToolboxItem Grid.Column="1"
                                  NodeMetadata="{Binding NodeMetadata}"
                                  AllowDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                                  AllowDoubleClickCreate="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDoubleClickCreate}"
                                  IsSelected="{Binding IsSelected}"
                                  Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  ToolTip="{Binding ToolTipText}"
                                  dragDrop:DragDropExtensions.EnableDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                                  dragDrop:DragDropExtensions.DragData="{Binding NodeMetadata}">
                <controls:ToolboxItem.Style>
                    <Style TargetType="controls:ToolboxItem">
                        <Setter Property="ItemBackground" Value="LightYellow" />
                        <Setter Property="ItemBorderBrush" Value="Goldenrod" />
                        <Setter Property="ItemBorderThickness" Value="2" />
                        <Style.Triggers>
                            <!-- 高亮状态 -->
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="ItemBackground" Value="LightGoldenrodYellow" />
                                <Setter Property="ItemBorderBrush" Value="Gold" />
                            </Trigger>

                            <!-- 选中状态 -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="ItemBackground" Value="Yellow" />
                                <Setter Property="ItemBorderBrush" Value="Orange" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </controls:ToolboxItem.Style>
            </controls:ToolboxItem>
        </Grid>
    </DataTemplate>

    <!-- GroupTemplate - 分组节点模板（按类型分组的节点） -->
    <HierarchicalDataTemplate x:Key="ToolBoxGroupTemplate"
                              DataType="{x:Type core:ICategoryTreeItemViewModel}"
                              ItemsSource="{Binding Children}">
        <Expander IsExpanded="{Binding IsExpanded}"
                  Header="{Binding}"
                  Margin="2,1">
            <Expander.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="📁"
                                   FontSize="12"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"
                                   Margin="2,0" />
                        <TextBlock Text="{Binding Name}"
                                   FontWeight="Bold"
                                   FontSize="12"
                                   Margin="2,0" />
                        <TextBlock Text="{Binding NodeCount, StringFormat=' ({0})'}"
                                   Foreground="Gray"
                                   FontSize="10"
                                   VerticalAlignment="Center"
                                   Margin="5,0,0,0" />
                    </StackPanel>
                </DataTemplate>
            </Expander.HeaderTemplate>
        </Expander>
    </HierarchicalDataTemplate>

    <!-- ContainerTemplate - 容器节点模板（包含其他节点的容器） -->
    <DataTemplate x:Key="ToolBoxContainerTemplate"
                  DataType="{x:Type core:INodeTreeItemViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- 容器标记 -->
            <TextBlock Grid.Column="0"
                       Text="📦"
                       FontSize="12"
                       FontWeight="Bold"
                       Foreground="SlateBlue"
                       VerticalAlignment="Center"
                       Margin="2,0" />

            <!-- 节点内容 -->
            <controls:ToolboxItem Grid.Column="1"
                                  NodeMetadata="{Binding NodeMetadata}"
                                  AllowDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                                  AllowDoubleClickCreate="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDoubleClickCreate}"
                                  IsSelected="{Binding IsSelected}"
                                  Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  ToolTip="{Binding ToolTipText}"
                                  dragDrop:DragDropExtensions.EnableDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                                  dragDrop:DragDropExtensions.DragData="{Binding NodeMetadata}">
                <controls:ToolboxItem.Style>
                    <Style TargetType="controls:ToolboxItem">
                        <Setter Property="ItemBackground" Value="LightSteelBlue" />
                        <Setter Property="ItemBorderBrush" Value="SteelBlue" />
                        <Setter Property="ItemBorderThickness" Value="2" />
                        <Style.Triggers>
                            <!-- 高亮状态 -->
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="ItemBackground" Value="LightBlue" />
                                <Setter Property="ItemBorderBrush" Value="RoyalBlue" />
                            </Trigger>

                            <!-- 选中状态 -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="ItemBackground" Value="CornflowerBlue" />
                                <Setter Property="ItemBorderBrush" Value="DarkBlue" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </controls:ToolboxItem.Style>
            </controls:ToolboxItem>
        </Grid>
    </DataTemplate>

</ResourceDictionary>