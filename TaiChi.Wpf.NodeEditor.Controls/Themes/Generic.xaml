<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TaiChi.Wpf.NodeEditor.Controls"
                    xmlns:converters="clr-namespace:TaiChi.Wpf.NodeEditor.Controls.Converters"
                    xmlns:core="clr-namespace:TaiChi.Wpf.NodeEditor.Core.Interfaces;assembly=TaiChi.Wpf.NodeEditor.Core"
                    xmlns:dragDrop="clr-namespace:TaiChi.Wpf.NodeEditor.Controls.AttachedProperties">

    <!-- 引入模板资源 -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/Converter.xaml" />
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/Dimensions.xaml" />
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/PinControlStyles.xaml" />
        <ResourceDictionary Source="/TaiChi.Wpf.NodeEditor.Controls;component/Themes/Templates/ToolBoxTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DirectoryDataTemplate"
                  DataType="{x:Type core:ICategoryTreeItemViewModel}">
        <StackPanel Orientation="Horizontal">
            <!-- 分组节点图标 -->
            <TextBlock Text="📁"
                       FontSize="12"
                       FontWeight="Bold"
                       VerticalAlignment="Center"
                       Margin="2,0">
            </TextBlock>

            <!-- 节点名称 -->
            <TextBlock Text="{Binding Name}"
                       FontWeight="Bold"
                       FontSize="12"
                       Margin="2,0" />

            <!-- 节点数量 -->
            <TextBlock Text="{Binding NodeCount, StringFormat=' ({0})'}"
                       Foreground="Gray"
                       FontSize="10"
                       VerticalAlignment="Center"
                       Margin="5,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ToolBoxNodeItemDataTemplate"
                  DataType="{x:Type core:INodeTreeItemViewModel}">
        <controls:ToolboxItem NodeMetadata="{Binding NodeMetadata}"
                              AllowDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                              AllowDoubleClickCreate="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDoubleClickCreate}"
                              IsSelected="{Binding IsSelected}"
                              Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ToolTip="{Binding ToolTipText}"
                              dragDrop:DragDropExtensions.EnableDrag="{Binding RelativeSource={RelativeSource AncestorType=controls:ToolboxControl}, Path=AllowDrag}"
                              dragDrop:DragDropExtensions.DragData="{Binding NodeMetadata}">
            <!-- <controls:ToolboxItem.Style> -->
            <!--     <Style TargetType="controls:ToolboxItem"> -->
            <!--         <Style.Triggers> -->
            <!--             ~1~ 高亮状态 @1@ -->
            <!--             <Trigger Property="IsHighlighted" Value="True"> -->
            <!--                 <Setter Property="ItemBackground" Value="LightBlue" /> -->
            <!--                 <Setter Property="ItemBorderBrush" Value="Blue" /> -->
            <!--             </Trigger> -->
            <!-- -->
            <!--             ~1~ 选中状态 @1@ -->
            <!--             <Trigger Property="IsSelected" Value="True"> -->
            <!--                 <Setter Property="ItemBackground" Value="LightSkyBlue" /> -->
            <!--                 <Setter Property="ItemBorderBrush" Value="DodgerBlue" /> -->
            <!--                 <Setter Property="ItemBorderThickness" Value="2" /> -->
            <!--             </Trigger> -->
            <!--         </Style.Triggers> -->
            <!--     </Style> -->
            <!-- </controls:ToolboxItem.Style> -->
        </controls:ToolboxItem>
    </DataTemplate>

    <controls:ToolBoxItemDataTemplateSelector x:Key="ToolBoxItemDataTemplateSelector"
                                              CategoryTemplate="{StaticResource DirectoryDataTemplate}"
                                              NodeTemplate="{StaticResource ToolBoxNodeItemDataTemplate}">
    </controls:ToolBoxItemDataTemplateSelector>

    <HierarchicalDataTemplate x:Key="ToolBoxItemDataTemplate"
                              ItemsSource="{Binding Path=Children}"
                              DataType="{x:Type core:INodeTreeItemViewModel}">
        <ContentControl Content="{Binding }"
                        ContentTemplateSelector="{StaticResource ToolBoxItemDataTemplateSelector}">
        </ContentControl>
    </HierarchicalDataTemplate>

    <!-- ConnectionControl 样式和模板 -->
    <Style TargetType="{x:Type controls:ConnectionControl}">
        <Setter Property="Stroke" Value="#4A90E2" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ConnectionControl}">
                    <Canvas>
                        <!-- 高光散射效果背景 -->
                        <Path x:Name="PART_GlowPath"
                              Stroke="{TemplateBinding Stroke}"
                              StrokeThickness="8"
                              Fill="Transparent"
                              Data="{TemplateBinding PathData}"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              Opacity="0">
                            <Path.Effect>
                                <BlurEffect Radius="4" />
                            </Path.Effect>
                        </Path>

                        <!-- 连接线路径 -->
                        <Path x:Name="PART_ConnectionPath"
                              Stroke="{TemplateBinding Stroke}"
                              StrokeThickness="{TemplateBinding StrokeThickness}"
                              Fill="Transparent"
                              Data="{TemplateBinding PathData}"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              Cursor="Hand" />

                    </Canvas>

                    <ControlTemplate.Triggers>
                        <!-- 鼠标悬停状态 - 高光散射效果 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_GlowPath" Property="Opacity" Value="0.6" />
                            <Setter TargetName="PART_GlowPath" Property="Stroke" Value="#7BB3F0" />
                            <Setter TargetName="PART_ConnectionPath" Property="StrokeThickness" Value="3" />
                        </Trigger>

                        <!-- 选中状态 - 改变颜色和高光 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="#FF6B35" />
                            <Setter TargetName="PART_ConnectionPath" Property="StrokeThickness" Value="3" />
                            <Setter TargetName="PART_GlowPath" Property="Opacity" Value="0.8" />
                            <Setter TargetName="PART_GlowPath" Property="Stroke" Value="#FF8C5A" />
                        </Trigger>

                        <!-- 高亮状态 -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="#F39C12" />
                            <Setter TargetName="PART_ConnectionPath" Property="StrokeThickness" Value="3" />
                            <Setter TargetName="PART_GlowPath" Property="Opacity" Value="0.7" />
                            <Setter TargetName="PART_GlowPath" Property="Stroke" Value="#F7DC6F" />
                        </Trigger>

                        <!-- 激活状态（数据流动） -->
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PART_ConnectionPath" Property="Stroke" Value="#2ECC71" />
                            <Setter TargetName="PART_ConnectionPath" Property="StrokeThickness" Value="3" />
                            <Setter TargetName="PART_GlowPath" Property="Opacity" Value="0.9" />
                            <Setter TargetName="PART_GlowPath" Property="Stroke" Value="#58D68D" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="PART_GlowPath"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.5" To="1.0" Duration="0:0:1"
                                                         AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="Focusable" Value="True" />
    </Style>

    <!-- NodeControl 样式和模板 -->
    <Style TargetType="{x:Type controls:NodeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NodeControl}">
                    <Border x:Name="PART_NodeBorder"
                            Background="{TemplateBinding NodeBackground}"
                            BorderBrush="{TemplateBinding NodeBorderBrush}"
                            BorderThickness="{TemplateBinding NodeBorderThickness}"
                            CornerRadius="5"
                            MinWidth="120"
                            Cursor="Hand">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- 节点头部 -->
                            <Border Grid.Row="0"
                                    Background="{TemplateBinding NodeBorderBrush}"
                                    CornerRadius="5,5,0,0">
                                <TextBlock x:Name="PART_NodeHeader"
                                           Text="{Binding NodeData.Name, RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="White"
                                           FontWeight="Bold"
                                           FontSize="12"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="8,4"
                                           TextTrimming="CharacterEllipsis" />
                            </Border>

                            <!-- 节点内容区域 -->
                            <Grid Grid.Row="1" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- 流程引脚区域 -->
                                <Grid Grid.Row="0" Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- 流程入口引脚 -->
                                    <ItemsControl Grid.Column="0"
                                                  ItemsSource="{Binding NodeData.InputPins, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlowPinFilterConverter}, ConverterParameter=true}"
                                                  VerticalAlignment="Top"
                                                  Margin="0,2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:PinControl PinData="{Binding}" Margin="0,2" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <!-- 流程出口引脚 -->
                                    <ItemsControl Grid.Column="2"
                                                  ItemsSource="{Binding NodeData.OutputPins, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlowPinFilterConverter}, ConverterParameter=true}"
                                                  VerticalAlignment="Top"
                                                  Margin="0,2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:PinControl PinData="{Binding}" Margin="0,2" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>

                                <!-- 数据引脚区域 -->
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- 数据输入引脚 -->
                                    <ItemsControl Grid.Column="0"
                                                  ItemsSource="{Binding NodeData.InputPins, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlowPinFilterConverter}, ConverterParameter=false}"
                                                  VerticalAlignment="Top"
                                                  Margin="0,2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:PinControl PinData="{Binding}" Margin="0,2" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <!-- 中间内容区域（可自定义） -->
                                    <ContentPresenter Grid.Column="1"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding NodeContentTemplate}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Margin="10,5" />

                                    <!-- 数据输出引脚 -->
                                    <ItemsControl Grid.Column="2"
                                                  ItemsSource="{Binding NodeData.OutputPins, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlowPinFilterConverter}, ConverterParameter=false}"
                                                  VerticalAlignment="Top"
                                                  Margin="0,2">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:PinControl PinData="{Binding}" Margin="0,2" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- 选中状态 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_NodeBorder" Property="BorderBrush" Value="Orange" />
                            <!-- 不改变 BorderThickness，避免选中/未选中引起布局偏移导致坐标变化 -->
                            <Setter TargetName="PART_NodeBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Orange" BlurRadius="8" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- 高亮状态 -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="PART_NodeBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Blue" BlurRadius="10" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- 拖拽状态 -->
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="PART_NodeBorder" Property="Opacity" Value="0.8" />
                            <Setter TargetName="PART_NodeBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" BlurRadius="15" ShadowDepth="5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="NodeBackground" Value="White" />
        <Setter Property="NodeBorderBrush" Value="Gray" />
        <Setter Property="NodeBorderThickness" Value="1" />
        <Setter Property="Focusable" Value="True" />
    </Style>

    <!-- NodeCanvas 样式和模板 -->
    <Style TargetType="{x:Type controls:NodeCanvas}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NodeCanvas}">
                    <Border Background="DarkGray" ClipToBounds="True">
                        <ScrollViewer x:Name="PART_CanvasScrollViewer"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      CanContentScroll="True"
                                      PanningMode="Both">

                            <Grid>
                                <!-- 网格背景 -->
                                <controls:GridBackground x:Name="PART_GridBackground"
                                                         Width="{TemplateBinding CanvasSize, Converter={StaticResource SizeToWidthConverter}}"
                                                         Height="{TemplateBinding CanvasSize, Converter={StaticResource SizeToHeightConverter}}"
                                                         GridSize="{TemplateBinding GridSize}"
                                                         ZoomLevel="{TemplateBinding ZoomLevel}"
                                                         Visibility="{TemplateBinding ShowGrid, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                <!-- 主画布 -->
                                <Canvas x:Name="PART_MainCanvas"
                                        Width="{TemplateBinding CanvasSize, Converter={StaticResource SizeToWidthConverter}}"
                                        Height="{TemplateBinding CanvasSize, Converter={StaticResource SizeToHeightConverter}}"
                                        Background="Transparent"
                                        ClipToBounds="False">

                                    <Canvas.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="PART_ZoomTransform"
                                                            ScaleX="{TemplateBinding ZoomLevel}"
                                                            ScaleY="{TemplateBinding ZoomLevel}" />
                                            <TranslateTransform x:Name="PART_PanTransform"
                                                                X="{TemplateBinding PanOffset, Converter={StaticResource PointToXConverter}}"
                                                                Y="{TemplateBinding PanOffset, Converter={StaticResource PointToYConverter}}" />
                                        </TransformGroup>
                                    </Canvas.RenderTransform>

                                    <!-- 连接线层 -->
                                    <ItemsControl ItemsSource="{TemplateBinding ConnectionsSource}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:ConnectionControl SourcePoint="{Binding SourcePointWpf}"
                                                                            TargetPoint="{Binding TargetPointWpf}"
                                                                            IsSelected="{Binding IsSelected}"
                                                                            Stroke="{Binding StrokeBrush}"
                                                                            StrokeThickness="{Binding StrokeThickness}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <!-- 待定连接线层 -->
                                    <ContentPresenter Content="{Binding PendingConnection, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <Path Stroke="{Binding StrokeBrush}"
                                                      StrokeThickness="{Binding StrokeThickness}"
                                                      StrokeStartLineCap="Round"
                                                      StrokeEndLineCap="Round"
                                                      Data="{Binding PathData}"
                                                      Opacity="0.7">
                                                    <Path.Effect>
                                                        <DropShadowEffect Color="#7BB3F0"
                                                                          BlurRadius="6"
                                                                          ShadowDepth="0"
                                                                          Opacity="0.6" />
                                                    </Path.Effect>
                                                </Path>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>

                                    <!-- 节点层 -->
                                    <ItemsControl ItemsSource="{TemplateBinding NodesSource}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                                                <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:NodeControl NodeData="{Binding Model}"
                                                                      IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                                                      NodeWidthProxy="{Binding Width, Mode=TwoWay}"
                                                                      NodeHeightProxy="{Binding Height, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <!-- 选择框 -->
                                    <controls:SelectionRectangle x:Name="PART_SelectionRectangle"
                                                                 SelectionBrush="Orange"
                                                                 SelectionBorderBrush="DarkOrange"
                                                                 SelectionOpacity="0.3" />
                                </Canvas>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="CanvasSize" Value="5000,5000" />
        <Setter Property="ZoomLevel" Value="1.0" />
        <Setter Property="ShowGrid" Value="True" />
        <Setter Property="GridSize" Value="20" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ClipToBounds" Value="True" />
    </Style>

    <!-- 展开折叠按钮样式 -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Width="16" Height="16">
                        <Path x:Name="ExpandPath"
                              Stroke="#666666"
                              StrokeThickness="1"
                              Data="M 0 0 L 6 6 L 12 0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M 0 6 L 6 0 L 12 6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#4A90E2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeViewItem 样式 - 与现有ToolboxControl风格保持一致 -->
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- 展开折叠按钮 -->
                        <ToggleButton x:Name="Expander"
                                      Grid.Column="0"
                                      Grid.Row="0"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      Margin="0,0,4,0" />

                        <!-- 节点内容边框 -->
                        <Border x:Name="Bd"
                                Grid.Column="1"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <!-- 子项容器 - 向下扩展 -->
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        Margin="0,0,0,0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- 鼠标悬停状态 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#F0F8FF" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#B0C4DE" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <!-- 选中状态 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#E6F3FF" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#4A90E2" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Bd" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#4A90E2" BlurRadius="4" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        
                        <!-- 禁用状态 -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="#F5F5F5" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Gray" />
                        </Trigger>

                        <!-- 展开/折叠状态 -->
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!-- 无子项时隐藏展开按钮 -->
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToolboxControl 样式和模板 - TreeView版本 -->
    <Style TargetType="{x:Type controls:ToolboxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToolboxControl}">
                    <Border Background="White"
                            BorderBrush="Gray"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- 搜索框 -->
                            <Border Grid.Row="0"
                                    Background="LightGray"
                                    Padding="5"
                                    Visibility="{TemplateBinding ShowSearch, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBox x:Name="PART_SearchTextBox"
                                         Text="{TemplateBinding SearchText}"
                                         FontSize="12"
                                         Padding="5,2"
                                         BorderThickness="1"
                                         BorderBrush="Gray">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <VisualBrush AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock Text="搜索节点..."
                                                                               Foreground="Gray"
                                                                               FontStyle="Italic" />
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Border>

                            <!-- 树形节点列表 -->
                            <ScrollViewer Grid.Row="1"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Auto">
                                <TreeView x:Name="PART_TreeView"
                                          ItemsSource="{TemplateBinding RootItems}"
                                          BorderThickness="0"
                                          Background="Transparent"
                                          ItemTemplate="{StaticResource ToolBoxItemDataTemplate}"
                                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                                </TreeView>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="ShowSearch" Value="True" />
        <Setter Property="AllowDrag" Value="True" />
        <Setter Property="AllowDoubleClickCreate" Value="True" />
        <Setter Property="MinWidth" Value="250" />
    </Style>

    <!-- SelectionRectangle 样式和模板 -->
    <Style TargetType="{x:Type controls:SelectionRectangle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SelectionRectangle}">
                    <Rectangle x:Name="PART_SelectionRectangle"
                               Fill="{TemplateBinding SelectionBrush}"
                               Stroke="{TemplateBinding SelectionBorderBrush}"
                               StrokeThickness="{TemplateBinding SelectionBorderThickness}"
                               Opacity="{TemplateBinding SelectionOpacity}"
                               StrokeDashArray="3,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="SelectionBrush" Value="LightBlue" />
        <Setter Property="SelectionBorderBrush" Value="Blue" />
        <Setter Property="SelectionBorderThickness" Value="1" />
        <Setter Property="SelectionOpacity" Value="0.3" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <!-- GridBackground 样式和模板 -->
    <Style TargetType="{x:Type controls:GridBackground}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:GridBackground}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="GridSize" Value="20" />
        <Setter Property="GridBrush" Value="LightGray" />
        <Setter Property="GridThickness" Value="0.5" />
        <Setter Property="MajorGridInterval" Value="5" />
        <Setter Property="MajorGridBrush" Value="Gray" />
        <Setter Property="MajorGridThickness" Value="1" />
        <Setter Property="ShowMajorGrid" Value="True" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <!-- ToolboxItem 样式和模板 -->
    <Style TargetType="{x:Type controls:ToolboxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToolboxItem}">
                    <Border x:Name="PART_ItemBorder"
                            Background="{TemplateBinding ItemBackground}"
                            BorderBrush="{TemplateBinding ItemBorderBrush}"
                            BorderThickness="{TemplateBinding ItemBorderThickness}"
                            CornerRadius="3"
                            Margin="2"
                            Padding="8,4"
                            Cursor="Hand">

                        <StackPanel>
                            <TextBlock x:Name="PART_NameText"
                                       Text="{Binding NodeMetadata.Name, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontWeight="Bold"
                                       FontSize="11"
                                       Foreground="Black"
                                       TextTrimming="CharacterEllipsis" />

                            <TextBlock x:Name="PART_DescriptionText"
                                       Text="{Binding NodeMetadata.Description, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontSize="9"
                                       Foreground="Gray"
                                       TextWrapping="Wrap"
                                       Margin="0,2,0,0"
                                       Visibility="{Binding NodeMetadata.Description,
                                                 RelativeSource={RelativeSource TemplatedParent},
                                                 Converter={StaticResource StringToVisibilityConverter}}" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- 高亮状态 -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="PART_ItemBorder" Property="Background" Value="LightBlue" />
                            <Setter TargetName="PART_ItemBorder" Property="BorderBrush" Value="Blue" />
                        </Trigger>

                        <!-- 选中状态 -->
                        <!-- <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_ItemBorder" Property="Background" Value="LightSkyBlue"/>
                            <Setter TargetName="PART_ItemBorder" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="ItemBackground" Value="White" />
        <Setter Property="ItemBorderBrush" Value="Transparent" />
        <Setter Property="ItemBorderThickness" Value="1" />
        <Setter Property="AllowDrag" Value="True" />
        <Setter Property="AllowDoubleClickCreate" Value="True" />
        <Setter Property="Focusable" Value="True" />
    </Style>

    <!-- ZoomController 样式和模板 -->
    <Style TargetType="{x:Type controls:ZoomController}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ZoomController}">
                    <Border Background="White"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="3"
                            Padding="5">
                        <StackPanel Orientation="Horizontal">
                            <!-- 缩小按钮 -->
                            <Button Content="−"
                                    Command="{TemplateBinding ZoomOutCommand}"
                                    Width="24"
                                    Height="24"
                                    Margin="0,0,2,0"
                                    FontSize="14"
                                    FontWeight="Bold" />

                            <!-- 缩放百分比 -->
                            <TextBlock Text="{Binding ZoomLevel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PercentageConverter}}"
                                       VerticalAlignment="Center"
                                       MinWidth="50"
                                       TextAlignment="Center"
                                       FontSize="11"
                                       Margin="2,0"
                                       Visibility="{TemplateBinding ShowPercentage, Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <!-- 放大按钮 -->
                            <Button Content="+"
                                    Command="{TemplateBinding ZoomInCommand}"
                                    Width="24"
                                    Height="24"
                                    Margin="2,0,0,0"
                                    FontSize="14"
                                    FontWeight="Bold" />

                            <!-- 预设按钮 -->
                            <StackPanel Orientation="Horizontal"
                                        Margin="5,0,0,0"
                                        Visibility="{TemplateBinding ShowPresetButtons, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button Content="适应"
                                        Command="{TemplateBinding FitToCanvasCommand}"
                                        Padding="4,2"
                                        Margin="0,0,2,0"
                                        FontSize="10" />
                                <Button Content="100%"
                                        Command="{TemplateBinding ResetZoomCommand}"
                                        Padding="4,2"
                                        FontSize="10" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="ZoomLevel" Value="1.0" />
        <Setter Property="MinZoom" Value="0.1" />
        <Setter Property="MaxZoom" Value="5.0" />
        <Setter Property="ZoomStep" Value="0.1" />
        <Setter Property="ShowPercentage" Value="True" />
        <Setter Property="ShowPresetButtons" Value="True" />
    </Style>

    <!-- MiniMap 样式和模板 -->
    <Style TargetType="{x:Type controls:MiniMap}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MiniMap}">
                    <Border Background="{TemplateBinding MapBackground}"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="3">
                        <Grid>
                            <!-- 小地图画布 -->
                            <Canvas x:Name="PART_MiniMapCanvas"
                                    ClipToBounds="True" />

                            <!-- 视口矩形 -->
                            <Rectangle x:Name="PART_ViewportRectangle"
                                       Fill="{TemplateBinding ViewportBrush}"
                                       Stroke="{TemplateBinding ViewportBorderBrush}"
                                       StrokeThickness="1"
                                       Opacity="0.3"
                                       IsHitTestVisible="False" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 默认属性值 -->
        <Setter Property="ScaleFactor" Value="0.1" />
        <Setter Property="ViewportBrush" Value="Blue" />
        <Setter Property="ViewportBorderBrush" Value="DarkBlue" />
        <Setter Property="MapBackground" Value="LightGray" />
        <Setter Property="NodeBrush" Value="Gray" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="150" />
    </Style>
</ResourceDictionary>
